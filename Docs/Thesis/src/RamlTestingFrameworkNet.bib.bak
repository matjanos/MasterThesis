% Encoding: UTF-8
@article{Athanasopoulos2015,
author = {Athanasopoulos, Michael and Kontogiannis, Kostas},
doi = {10.1016/j.jss.2014.10.038},
issn = {01641212},
journal = {Journal of Systems and Software},
month = {feb},
pages = {149--166},
title = {{Extracting REST resource models from procedure-oriented service interfaces}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121214002362},
volume = {100},
year = {2015}
}
@article{Battle2008,
abstract = {Semantic Web technologies must integrate with Web 2.0 services for both to leverage each others strengths. We argue that the REST-based design methodologies [R.T. Fielding, R.N. Taylor, Principled design of the modern web architecture, ACM Trans. Internet Technol. (TOIT) 2 (2) (2002) 115-150] of the web present the ideal mechanism through which to align the publication of semantic data with the existing web architecture. We present the design and implementation of two solutions that combine REST-based design and RDF [D. Beckett (Ed.), RDF/XML Syntax Specification (Revised), W3C Recommendation, February 10, 2004] data access: one solution for integrating existing web services and one server-side solution for creating RDF REST services. Both of these solutions enable SPARQL [E. Prud'hommeaux, A. Seaborne (Eds.), SPARQL Query Language for RDF, W3C Working Draft, March 26, 2007] to be a unifying data access layer for aligning the Semantic Web and Web 2.0. ?? 2007 Elsevier B.V. All rights reserved.},
author = {Battle, Robert and Benson, Edward},
doi = {10.1016/j.websem.2007.11.002},
isbn = {1570-8268},
issn = {15708268},
journal = {Web Semantics},
keywords = {Representational State Transfer,Semantic Web,Web 2.0,Web Services},
month = {feb},
number = {1},
pages = {61--69},
title = {{Bridging the semantic Web and Web 2.0 with Representational State Transfer (REST)}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S1570826807000510},
volume = {6},
year = {2008}
}
@inproceedings{Chakrabarti2009,
author = {Chakrabarti, Sujit Kumar and Kumar, Prashant},
booktitle = {2009 Computation World: Future Computing, Service Computation, Cognitive, Adaptive, Content, Patterns},
doi = {10.1109/ComputationWorld.2009.116},
isbn = {978-1-4244-5166-1},
month = {nov},
pages = {302--308},
publisher = {IEEE},
title = {{Test-the-REST: An Approach to Testing RESTful Web-Services}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5359602},
year = {2009}
}
@misc{Costa2016,
abstract = {Architectural decisions determine the ability of the implemented system to satisfy functional and quality attribute requirements. The Representational State Transfer (REST) architectural style has been extensively used recently for integrating services and applications. Its adoption to build SOA-based distributed systems brings several benefits, but also poses new challenges and risks. Particularly important among those risks are failures to effectively address quality attribute requirements such as security, reliability, and performance. A proved efficient technique to identify and help mitigate those risks is the architecture evaluation. In this paper we propose an approach, tooling, and guidelines to aid architecture evaluation activities in REST-based systems. These guidelines can be systematically used along with evaluation methods to reason about design considerations and tradeoffs. To demonstrate how the guidelines can help architecture evaluators, we present a proof of concept describing how to use the guidelines in an ATAM (Architecture Tradeoff Analysis Method) evaluation. We also present the results of a survey conducted with industry specialists who have performed architecture evaluations in real world REST-based systems in order to gauge the suitability and utility of the proposed guidelines. Finally, the paper describes a Web tool developed to facilitate the use of the evaluation guidelines.},
author = {Costa, Bruno and Pires, Paulo F. and Delicato, Flavia C. Fl{\'{a}}via C. and Merson, Paulo},
booktitle = {Journal of Systems and Software},
doi = {10.1016/j.jss.2015.09.039},
issn = {01641212},
keywords = {,REST,Scenario-based evaluation guidelines,Software architecture evaluation,scenario-based evaluation guidelines,software architecture evaluation},
month = {apr},
pages = {156--180},
publisher = {IEEE},
title = {{Evaluating REST architectures-Approach, tooling and guidelines}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6827107 http://linkinghub.elsevier.com/retrieve/pii/S0164121215002150},
volume = {112},
year = {2014}
}
@article{Farzat2012,
author = {Farzat, Fabio and {de O. Barros}, M{\'{a}}rcio},
doi = {10.3138/infor.50.4.163},
issn = {0315-5986},
journal = {INFOR: Information Systems and Operational Research},
month = {jan},
number = {4},
pages = {163--174},
title = {{Unit Test Case Selection to Evaluate Changes in Critical Time}},
url = {http://utpjournals.press/doi/10.3138/infor.50.4.163},
volume = {50},
year = {2012}
}
@article{Fielding2000,
abstract = {The World Wide Web has succeeded in the large part because its$\backslash$nsoftware architecture has been designed to meet the needs of an$\backslash$nInternet-scale distributed hypermedia system. The modern Web$\backslash$narchitecture emphasizes scalability of component interactions,$\backslash$ngenerality of interfaces, independent deployment of components, and$\backslash$nintermediary components to reduce interaction latency, enforce security,$\backslash$nand encapsulate legacy systems. We introduce the Representational State$\backslash$nTransfer (REST) architectural style, developed as an abstract model of$\backslash$nthe Web architecture to guide our redesign and definition of the$\backslash$nHypertext Transfer Protocol and Uniform Resource Identifiers. We$\backslash$ndescribe the software engineering principles guiding REST and the$\backslash$ninteraction constraints chosen to retain those principles, contrasting$\backslash$nthem to the constraints of other architectural styles. We then compare$\backslash$nthe abstract model to the currently deployed Web architecture in order$\backslash$nto elicit mismatches between the existing protocols and the applications$\backslash$nthey are intended to support},
archivePrefix = {arXiv},
arxivId = {10.1145/514183.514185},
author = {Fielding, R.T. and Taylor, R.N.},
doi = {10.1109/ICSE.2000.870431},
eprint = {514183.514185},
isbn = {1-58113-206-9},
issn = {0270-5257},
journal = {Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium},
number = {2},
pages = {115--150},
primaryClass = {10.1145},
publisher = {ACM},
title = {{Principled design of the modern Web architecture}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=870431},
volume = {2},
year = {2000}
}
@article{Fielding2000a,
abstract = {The World Wide Web has succeeded in large part because its software architecture has been designed to meet the needs of an Internet-scale distributed hypermedia system. The Web has been iteratively developed over the past ten years through a series of modifications to the standards that define its architecture. In order to identify those aspects of the Web that needed improvement and avoid undesirable modifications, a model for the modern Web architecture was needed to guide its design, definition, and deployment. Software architecture research investigates methods for determining how best to partition a system, how components identify and communicate with each other, how information is communicated, how elements of a system can evolve independently, and how all of the above can be described using formal and informal notations. My work is motivated by the desire to understand and evaluate the architectural design of network-based application software through principled use of architectural constraints, thereby obtaining the functional, performance, and social properties desired of an architecture. An architectural style is a named, coordinated set of architectural constraints. This dissertation defines a framework for understanding software architecture via architectural styles and demonstrates how styles can be used to guide the architectural design of network-based application software. A survey of architectural styles for network-based applications is used to classify styles according to the architectural properties they induce on an architecture for distributed hypermedia. I then introduce the Representational State Transfer (REST) architectural style and describe how REST has been used to guide the design and development of the architecture for the modern Web. REST emphasizes scalability of component interactions, generality of interfaces, independent deployment of components, and intermediary components to reduce interaction latency, enforce security, and encapsulate legacy systems. I describe the software engineering principles guiding REST and the interaction constraints chosen to retain those principles, contrasting them to the constraints of other architectural styles. Finally, I describe the lessons learned from applying REST to the design of the Hypertext Transfer Protocol and Uniform Resource Identifier standards, and from their subsequent deployment in Web client and server software.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Fielding, Roy Thomas},
doi = {10.1.1.91.2433},
eprint = {arXiv:1011.1669v3},
file = {:D$\backslash$:/kmatj{\_}000/Documents/Studia/MasterThesis/Docs/Papers/fielding{\_}dissertation.pdf:pdf},
isbn = {0599871180},
issn = {1098-6596},
journal = {Building},
pages = {162},
pmid = {25246403},
title = {{Architectural Styles and the Design of Network-based Software Architectures}},
url = {http://www.ics.uci.edu/{~}fielding/pubs/dissertation/top.htm},
volume = {54},
year = {2000}
}
@article{Finney2011,
author = {Finney, Kim Tracy and Watts, David},
doi = {10.1080/13658816.2010.508042},
issn = {1365-8816},
journal = {International Journal of Geographical Information Science},
month = {sep},
number = {9},
pages = {1507--1524},
title = {{REST-based semantic feature catalogue services}},
url = {http://www.tandfonline.com/doi/abs/10.1080/13658816.2010.508042},
volume = {25},
year = {2011}
}
@article{Ganesan2013,
author = {Ganesan, Dharmalingam and Lindvall, Mikael and McComas, David and Bartholomew, Maureen and Slegel, Steve and Medina, Barbara and Krikhaar, Rene and Verhoef, Chris and Montgomery, Lisa P.},
doi = {10.1016/j.scico.2012.02.006},
issn = {01676423},
journal = {Science of Computer Programming},
month = {dec},
number = {12},
pages = {2360--2380},
title = {{An analysis of unit tests of a flight software product line}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0167642312000317},
volume = {78},
year = {2013}
}
@article{Griffin2011,
author = {Griffin, Keith and Flanagan, Colin},
doi = {10.1016/j.comcom.2010.03.029},
issn = {01403664},
journal = {Computer Communications},
month = {feb},
number = {2},
pages = {140--149},
title = {{Defining a call control interface for browser-based integrations using representational state transfer}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0140366410001520},
volume = {34},
year = {2011}
}
@inproceedings{Hoffman,
author = {Hoffman, D. and Strooper, P.},
booktitle = {Proceedings 2000 Australian Software Engineering Conference},
doi = {10.1109/ASWEC.2000.844580},
isbn = {0-7695-0631-3},
pages = {235--245},
publisher = {IEEE Comput. Soc},
title = {{Tools and techniques for Java API testing}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=844580}
}
@inproceedings{Kao2013,
author = {Kao, Chia Hung and Lin, Chun Cheng and Chen, Juei-Nan},
booktitle = {2013 13th International Conference on Quality Software},
doi = {10.1109/QSIC.2013.32},
isbn = {978-0-7695-5039-8},
month = {jul},
pages = {349--354},
publisher = {IEEE},
title = {{Performance Testing Framework for REST-Based Web Applications}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6605950},
year = {2013}
}
@article{Marcozzi2015,
author = {Marcozzi, Micha{\"{e}}l and Vanhoof, Wim and Hainaut, Jean-Luc},
doi = {10.1016/j.scico.2015.03.005},
issn = {01676423},
journal = {Science of Computer Programming},
month = {jul},
pages = {44--72},
title = {{Relational symbolic execution of SQL code for unit testing of database programs}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0167642315000660},
volume = {105},
year = {2015}
}
@article{Maso2014,
author = {Mas{\'{o}}, Joan and Pons, Xavier and Zabala, Alaitz},
doi = {10.1080/17538947.2012.669414},
issn = {1753-8947},
journal = {International Journal of Digital Earth},
month = {mar},
number = {3},
pages = {175--193},
title = {{Building the World Wide Hypermap (WWH) with a RESTful architecture}},
url = {http://www.tandfonline.com/doi/abs/10.1080/17538947.2012.669414},
volume = {7},
year = {2014}
}
@inproceedings{QingXie2008,
author = {{Qing Xie} and {Mark Grechanik} and {Chen Fu}},
booktitle = {2008 IEEE International Conference on Software Maintenance},
doi = {10.1109/ICSM.2008.4658108},
isbn = {978-1-4244-2613-3},
month = {sep},
pages = {468--469},
publisher = {IEEE},
title = {{REST: A tool for reducing effort in script-based testing}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4658108},
year = {2008}
}
@inproceedings{Savchenko2015,
abstract = {Microservice architecture is a cloud application design pattern that implies that the application is divided into a number of small independent services, each of which is responsible for implementing of a certain feature. The need for continuous integration of developed and/or modified microservices in the existing system requires a comprehensive validation of individual microservices and their co-operation as an ensemble with other microservices. In this paper, we would provide an analysis of existing methods of cloud applications testing and identify features that are specific to the microservice architecture. Based on this analysis, we will try to propose a validation methodology of the microservice systems.},
author = {Savchenko, D. I. and Radchenko, G. I. and Taipale, O.},
booktitle = {2015 38th International Convention on Information and Communication Technology, Electronics and Microelectronics, MIPRO 2015 - Proceedings},
doi = {10.1109/MIPRO.2015.7160271},
file = {:D$\backslash$:/kmatj{\_}000/Desktop/Microservices/Microservices validation  Mjolnirr platform case study.pdf:pdf},
isbn = {9789532330854},
keywords = {Cloud computing,Microservices,PaaS,Services Oriented Architecture,testing,validation},
month = {may},
pages = {235--240},
publisher = {IEEE},
title = {{Microservices validation: Mjolnirr platform case study}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7160271},
year = {2015}
}
@article{Severance2015,
abstract = {Roy T. Fielding reminisces about his PhD dissertation, which defined the Representational State Transfer architectural style. The first Web extra at http://youtu.be/w5j2KwzzB-0 is a video in which Roy T. Fielding talks with Charles Severance about his PhD dissertation, which defined the Representational State Transfer architectural style. The second Web extra at http://youtu.be/Bwvpuef79lY is an audio recording in which author Charles Severance reads his Computing Conversations column that discusses his interview with Roy T. Fielding about his PhD dissertation, which defined the Representational State Transfer architectural style. [ABSTRACT FROM PUBLISHER]},
author = {Severance, Charles},
issn = {00189162},
journal = {Computer},
keywords = {COMPUTER architecture,Computer architecture,Computing Conversations,FIELDING, Roy T.,REPRESENTATIONAL State Transfer (Software architec,REST,Representational state transfer,Roy T. Fielding,SEVERANCE, Charles,SOFTWARE architecture,software architecture},
number = {6},
pages = {7--9},
title = {{Roy T. Fielding: Understanding the REST Style.}},
url = {10.1109/MC.2015.170$\backslash$nhttp://proxy.timbo.org.uy:443/login?url=http://search.ebscohost.com/login.aspx?direct=true{\&}db=iih{\&}AN=103264473{\&}lang=es{\&}site=eds-live},
volume = {48},
year = {2015}
}
@article{Shin2013,
author = {Shin, Youngsul and Choi, Yunja and Lee, Woo Jin},
doi = {10.1016/j.compbiomed.2013.01.024},
issn = {00104825},
journal = {Computers in Biology and Medicine},
month = {jun},
number = {5},
pages = {434--443},
title = {{Integration testing through reusing representative unit test cases for high-confidence medical software}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0010482513000450},
volume = {43},
year = {2013}
}
@inproceedings{Song2013,
author = {Song, Huazhu and Xiao, Cong and Wang, Xiaoxue and Zhao, Ziyue},
booktitle = {Proceedings of 2013 3rd International Conference on Computer Science and Network Technology},
doi = {10.1109/ICCSNT.2013.6967120},
isbn = {978-1-4799-0561-4},
month = {oct},
pages = {315--319},
publisher = {IEEE},
title = {{Web ontology visualization architecture based on Representational State Transfer}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6967120},
year = {2013}
}
@article{VanDeursen2015,
author = {van Deursen, Arie},
doi = {10.1145/2755501},
issn = {00010782},
journal = {Communications of the ACM},
month = {jul},
number = {8},
pages = {36--43},
title = {{Testing web applications with state objects}},
url = {http://dl.acm.org/citation.cfm?doid=2808213.2755501},
volume = {58},
year = {2015}
}
@article{Wu2016,
author = {Wu, Xi and Zhu, Huibiao},
doi = {10.1016/j.future.2015.09.007},
issn = {0167739X},
journal = {Future Generation Computer Systems},
month = {mar},
pages = {153--168},
title = {{Formalization and analysis of the REST architecture from the process algebra perspective}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0167739X15002861},
volume = {56},
year = {2016}
}
@inproceedings{Xia2009,
author = {Xia, Qiming and Nie, Nan and Yao, Junfeng and He, Keqing},
booktitle = {2009 International Conference on E-Business and Information System Security},
doi = {10.1109/EBISS.2009.5138148},
isbn = {978-1-4244-4589-9},
month = {may},
pages = {1--5},
publisher = {IEEE},
title = {{XML API-Based Test Framework of Extension Interface Using Software Mutation Analysis for Component}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5138148},
year = {2009}
}

@Book{Evans2004,
  title     = {Domain-driven design: tackling complexity in the heart of software},
  publisher = {Addison-Wesley Professional},
  year      = {2004},
  author    = {Evans, Eric},
}

@Book{Newman2015,
  title     = {Building Microservices},
  publisher = {" O'Reilly Media, Inc."},
  year      = {2015},
  author    = {Newman, Sam},
}

@Misc{Fowler2014,
  author       = {J. Lewis M. Fowler},
  title        = {Microservices - a definition of this new architectural term},
  howpublished = {http://martinfowler.com/articles/microservices.html},
  month        = {mar},
  year         = {2014},
  note         = {Accessed: 2016-04-25},
  abstract     = {The term "Microservice Architecture" has sprung up over the last few years to describe a particular way of designing software applications as suites of independently deployable services. While there is no precise definition of this architectural style, there are certain common characteristics around organization around business capability, automated deployment, intelligence in the endpoints, and decentralized control of languages and data.},
  url          = {http://martinfowler.com/articles/microservices.html},
}

@InProceedings{TankovicBogunovicGrbacEtAl2015,
  author    = {N. Tanković and N. Bogunović and T. G. Grbac and M. Žagar},
  title     = {Analyzing incoming workload in Cloud business services},
  booktitle = {Software, Telecommunications and Computer Networks (SoftCOM), 2015 23rd International Conference on},
  year      = {2015},
  pages     = {300-304},
  month     = {Sept},
  doi       = {10.1109/SOFTCOM.2015.7314068},
  keywords  = {business data processing;cloud computing;optimisation;capacity planning controller;cloud business service;infrastructure cost reduction;pay-as-you-go concept;production business service;software distribution optimization;Business;Cloud computing;Computational modeling;Forecasting;Predictive models;Time series analysis},
}

@Article{Thoenes2015,
  author   = {J. Thönes},
  title    = {Microservices},
  journal  = {IEEE Software},
  year     = {2015},
  volume   = {32},
  number   = {1},
  pages    = {116-116},
  month    = {Jan},
  abstract = {In this excerpt from Software Engineering Radio, Johannes Thönes talks with James Lewis, principal consultant at ThoughtWorks, about microservices. They discuss microservices' recent popularity, architectural styles, deployment, size, technical decisions, and consumer-driven contracts. They also compare microservices to service-oriented architecture and wrap up the episode by talking about key figures in the microservice community and standing on the shoulders of giants. The Web extra at http://www.se-radio.net/2014/10/episode-213-james-lewis-on-microservices is an audio recording of Tobias Kaatz speaking with James Lewis, principal consultant at ThoughtWorks, about microservices. They discuss microservices' recent popularity, architectural styles, deployment, size, technical decisions, and consumer-driven contracts. They also compare microservices to service-oriented architecture and wrap up the episode by talking about key figures in the microservice community and standing on the shoulders of giants.},
  doi      = {10.1109/MS.2015.11},
  issn     = {0740-7459},
  keywords = {Interviews;Service oriented architecture;Software architecture;Software engineering;SE Radio;architecture;enterprise service bus;http;microservice;service-oriented architecture;software engineering},
}

@Comment{jabref-meta: databaseType:bibtex;}
