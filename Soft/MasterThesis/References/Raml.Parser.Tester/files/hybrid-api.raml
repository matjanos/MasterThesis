#%RAML 0.8
title: hybrid-rest-services
version: 0.1
mediaType: application/json
baseUri: https://anypoint.mulesoft.com/hybrid/api/v0.1

# TODO: Schemas

traits:
  - searchable:
      queryParameters:
        name:
        search:
  - pageable:
      queryParameters:
        offset:
          description: Skip over a number of elements by specifying an offset value for the query
          type: integer
          required: false
          example: 20
          default: 0
        limit:
          description: Limit the number of elements on the response
          type: integer
          required: false
          example: 80
          default: 10

resourceTypes:
  - collection:
      description: Collection of available <<resourcePathName>> in Hybrid.
      get:
        description: Get a list of <<resourcePathName>>.
        responses:
          200:
            body:
              application/json:
                example: |
                  { data: [
                      <<exampleItem>>
                    ]
                  }
      post:
        queryParameters:
        body:
          application/json:
            schema: #<<resourcePathName|!singularize>>
        responses:
          201:
            body:
              application/json:
                example: |
                  { data: <<exampleItem>>
                  }
  - collection-item:
      description: Get an entity representing a <<resourcePathName|!singularize>>
      get:
        description: |
          Get the <<resourcePathName|!singularize>>
          with id =
          {<<resourcePathName|!singularize>>Id}
        responses:
          200:
            body:
              application/json:
                example: |
                  <<exampleItem>>
          404:
            body:
              application/json:
                example: |
                  {"message": "<<resourcePathName|!singularize>> not found" }

/servers:
  description: A server is an instance of Mule. It can be used as a deployment target.
  type:
    collection:
      exampleItem: !include hybrid-include-server.sample
  post:
    description: Register a server. Multipart request with certificate. Responds with signed certificate.
    body:
      application/json:  # TODO: Multipart
        example: |
          {
            name: "Test_Server",
            muleVersion: "3.6.0",
            signatureRequest: "<signature request>",
            environment: "test"
          }
    responses:
      201:
        body:
          application/json:

  get:
    queryParameters:
      serverGroupId:
        type: number
      deploymentId:
        type: number
      applicationId:
        type: number
      name:
        type: string
    responses:
      200:
        body:
          application/json:

  /{serverId}:
    type:
      collection-item:
        exampleItem: !include hybrid-include-server.sample
    get:
    delete:
      description: >
        Forcibly remove the server from Hybrid:
        <li> Removes the server from its server group.
        <li> Deletes related server artifacts from all deployments. Does not attempt to nicely undeploy the server artifacts from the server. Records are simply deleted.
        <li> If the server is connected, the connection is terminated and will not be accepted in future.
        <br><br>
        To cleanly delete a server, first:
        <li> Remove the server from its group.
        <li> Delete all deployments whose deployment target is this server.
        <li> Wait until all applications are undeployed.

    /applications:
      description: A server artifact - Represents an application deployed to a server.
        Creating a Deployment produces Server Artifacts. If deployment is successful, the artifacts will have status “STARTED”.
        If the discovered field is true, the server artifact was not deployed by Hybrid. It was discovered on (reported by) the Mule Agent.
        Therefore it has no deployment, artifact or application.
      get:
        description: Retrieve the status of applications deployed to this server.
        responses:
          200:
            body:
              application/json:  # TODO: Multipart
                example: |
                  {
                    data: [ !include hybrid-include-serverArtifact.sample ]
                  }
      /{applicationId}:
        patch:
          description: 1) Start or 2) Stop an application on a server.
          body:
            application/json:
              example: |
                { desiredStatus: “STARTED” }
          responses:
            200:
              body:
                example: |
                  { data: !include hybrid-include-serverArtifact.sample }


/server-groups:
  description: A Server Group is a logical grouping of servers. It can be used as a deployment target.
  type:
    collection:
      exampleItem: !include hybrid-include-serverGroup.sample
  post:
    description: Create a server group.
    body:
      application/json:
        example: |
          {
            name: "My group",
            serverIds: [ "s-1" ],
            environment: "test"
          }
  get:
    description: List mule groups
    queryParameters:
      _expand:
        description: List of objects to retrieve.
        enum: [ servers ] #TODO: List of enum.
      serverId:
        description: Find server groups containing specified server.
        type: number
    responses:
      200:
        body:
          application/json:

  /{serverGroupId}:
    type:
      collection-item:
        exampleItem: !include hybrid-include-serverGroup.sample
    get:
    #TODO - DELETE - this was missing from the v0.1 spec.

    /servers/{serverId}:
      type:
        collection-item:
          exampleItem: !include hybrid-include-server.sample
      post:
        description: Add server to server group. Any artifacts deployed to this server group will be deployed to the new server. Returns the updated server.
        responses:
          201:
            description: Server added succesfully.
            body:
              application/json:
                example: |
                  { data:  !include hybrid-include-server.sample
                  }

      delete:
        description: Remove server from server group.  This undeploys any artifacts from the server which are deployed to this server group.
        responses:
          204:

/applications:
  description: An Application is a Mule application. A version of an application can be used as an artifact.
  type:
    collection:
      exampleItem: !include hybrid-include-application.sample

  post:
    body:
      multipart/form-data:
        formParameters:
          file:
            description: The file to be uploaded
            required: false
            type: file
          name:
            description: The name of the application.
            type: string

      application/json:  # TODO - optional multipart with ZIP file.
        example: |
          {
            name: "app1",
            file: "app1-myfirstupload.zip"
          }

    description: Create a new application. Optionally upload a ZIP file.

  get:

  /{applicationId}:
    type:
      collection-item:
        exampleItem: !include hybrid-include-application.sample
    get:

    /versions:  # FUTURE - could create contentId
      type:
        collection:
          exampleItem: !include hybrid-include-application-version.sample
      get:

      post:
        description: Upload a ZIP file. This creates a new version. Use this the first time you upload, or subsequent times. Updates the latestVersion of the application. The application must already have been created.
        body:
          multipart/form-data:
            formParameters:
              file:
                description: The file to be uploaded. DAVID WAS HERE.
                required: true
                type: file

/deployments:
  description: A Deployment associates an Artifact (a version of an application or domain) with a Deployment Target (a server or server group).
  type:
    collection:
      exampleItem: !include hybrid-include-deployment.sample
  post:
    description: Deploy an aritfact to a deployment target. Initiates deployment and creates server artifacts.
    body:
      application/json:
        example: |
          {
            artifact: {
              id: "a-1",
              type: "APPLICATION",
              version: 1
            },
            target: {
              id: "sg-1",
              type: "SERVER_GROUP",
            }
          }
    responses:
      201:

  delete:
    description: Undeploy artifact from all servers in deployment target and delete the deployment
    responses:
      202:
        description: Undeployment in progress.
      204:
        description: Undeployment completed immediately (target was empty).

  get:
    description: Get deployments matching the query.
    queryParameters:
      artifactId:
        description: ID of artifact whose deployments to retrieve.
        type: number
      artifactType:
        description: Type of artifact whose deployments to retrieve.
        enum: [ APPLICATION ]
      targetId:
        description: ID of deployment target whose deployments to retrieve.
        type: number
      targetType:
        description: Type of deployment target whose deployments to retrieve.
        enum: [ SERVER, SERVER_GROUP ]
      applicationId:
        description: artifactId with type APPLICATION.
        type: number
      serverId:
        description: targetId with type SERVER, or target is server group and server is member.
        type: number
      serverGroupId:
        description: targetId with type SERVER_GROUP.
        type: number
      _expand:
        description: List of objects to retrieve.
        enum: [ application, domain, server ] #TODO: List of enum.
    responses:
      200:

  patch:
    description: Various effects - 1) Start or Stop the deployed applications. 2) Redeploy or update the version.
    body:
      application/json:
        example: |
          [
            {
              desiredStatus: "STOPPED"
            },
            {
              artifact: {
                version: 2
              }
            }
          ]
